import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;



public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));

        List<List<Integer>> arr = new ArrayList<>();

        IntStream.range(0, 6).forEach(i -> {
            try {
                arr.add(
                    Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
                        .map(Integer::parseInt)
                        .collect(toList())
                );
            } catch (IOException ex) {
                throw new RuntimeException(ex);
            }
        });
        
        int top_row_sum = 0, bottom_row_sum = 0, middle = 0, sum = -55, temp_sum = -55, move_right = 0;
        
        for(int row = 0; row < 4; row++){
            top_row_sum = 0;
            bottom_row_sum = 0;
            for(int top_pl = 0; top_pl < 4; top_pl++){
	            top_row_sum = 0;
                bottom_row_sum = 0;
                for(move_right = top_pl; move_right < top_pl + 3; move_right++){
                    top_row_sum  += arr.get(row).get(move_right);
                    bottom_row_sum += arr.get(row+2).get(move_right);
                }
                middle = arr.get(row+1).get(top_pl+1);
                temp_sum = top_row_sum + bottom_row_sum + middle; 
                if(temp_sum > sum){
                    sum = temp_sum;
                }
            }
        }
        System.out.println(sum);
        
        bufferedReader.close();
    }
}
